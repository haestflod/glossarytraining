{"version":3,"sources":["C:/Users/Hope/Documents/GitHub/glossarytraining/src/$_lazy_route_resource lazy","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/admin.component.html","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/admin.component.less","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/admin.component.ts","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/admin.module.ts","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/category/category-detail/category-detail.component.html","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/category/category-detail/category-detail.component.less","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/category/category-detail/category-detail.component.ts","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/category/category-list/category-list.component.html","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/category/category-list/category-list.component.less","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/category/category-list/category-list.component.ts","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/phrases/phrases-detail/phrases-detail.component.html","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/phrases/phrases-detail/phrases-detail.component.less","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/phrases/phrases-detail/phrases-detail.component.ts","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/phrases/phrases-list/phrases-list.component.html","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/phrases/phrases-list/phrases-list.component.less","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/phrases/phrases-list/phrases-list.component.ts","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/phrases/phrases-quiz-selection/phrases-quiz-selection.component.html","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/phrases/phrases-quiz-selection/phrases-quiz-selection.component.less","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/phrases/phrases-quiz-selection/phrases-quiz-selection.component.ts","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/quiz/quiz-detail/quiz-detail.component.html","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/quiz/quiz-detail/quiz-detail.component.less","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/quiz/quiz-detail/quiz-detail.component.ts","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/quiz/quiz-list/quiz-list.component.html","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/quiz/quiz-list/quiz-list.component.less","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/quiz/quiz-list/quiz-list.component.ts","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/shared/entity-list/entity-list.component.html","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/shared/entity-list/entity-list.component.less","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/shared/entity-list/entity-list.component.ts","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/shared/shared.module.ts","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/app.component.html","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/app.component.less","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/app.component.ts","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/app.module.ts","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/home/home.component.html","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/home/home.component.less","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/home/home.component.ts","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/home/home.module.ts","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/phrase/phrase.module.ts","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/phrase/phrases-selection/phrases-selection.component.html","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/phrase/phrases-selection/phrases-selection.component.less","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/phrase/phrases-selection/phrases-selection.component.ts","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/quiz/quiz-multiple-question/quiz-multiple-question.component.html","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/quiz/quiz-multiple-question/quiz-multiple-question.component.less","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/quiz/quiz-multiple-question/quiz-multiple-question.component.ts","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/quiz/quiz-question/quiz-question.component.html","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/quiz/quiz-question/quiz-question.component.less","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/quiz/quiz-question/quiz-question.component.ts","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/quiz/quiz-selection/quiz-selection.component.html","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/quiz/quiz-selection/quiz-selection.component.less","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/quiz/quiz-selection/quiz-selection.component.ts","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/quiz/quiz-text-question/quiz-text-question.component.html","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/quiz/quiz-text-question/quiz-text-question.component.less","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/quiz/quiz-text-question/quiz-text-question.component.ts","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/quiz/quiz.component.html","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/quiz/quiz.component.less","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/quiz/quiz.component.ts","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/quiz/quiz.module.ts","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/quiz/quiz.service.ts","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/shared/enums/quiz-type.enum.ts","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/shared/layout/header/header.component.html","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/shared/layout/header/header.component.less","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/shared/layout/header/header.component.ts","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/shared/models/multiple-question.ts","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/shared/models/text-question.ts","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/shared/services/api.service.ts","C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/shared/shared.module.ts","C:/Users/Hope/Documents/GitHub/glossarytraining/src/environments/environment.ts","C:/Users/Hope/Documents/GitHub/glossarytraining/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"<nav>\\r\\n  <a [routerLink]=\\\"['./quizzes']\\\" >Quizzes</a>\\r\\n  <br>\\r\\n  <a [routerLink]=\\\"['./phrases']\\\">Words and phrases</a>\\r\\n  <br>\\r\\n  <a [routerLink]=\\\"['./categories']\\\">Categories</a>\\r\\n</nav>\\r\\n<div>\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/admin.component.html\n// module id = ../../../../../src/app/admin/admin.component.html\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"nav {\\n  margin-bottom: 15px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/admin.component.less\n// module id = ../../../../../src/app/admin/admin.component.less\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.less']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n\r\n  constructor () { }\r\n\r\n  ngOnInit () {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/admin.component.ts","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { PhraseModule } from \"../phrase/phrase.module\";\r\n\r\nimport { AdminComponent } from './admin.component';\r\nimport { QuizListComponent } from './quiz/quiz-list/quiz-list.component';\r\nimport { QuizDetailComponent } from './quiz/quiz-detail/quiz-detail.component';\r\nimport { PhrasesListComponent } from './phrases/phrases-list/phrases-list.component';\r\nimport { PhrasesDetailComponent } from './phrases/phrases-detail/phrases-detail.component';\r\nimport { PhrasesQuizSelectionComponent } from './phrases/phrases-quiz-selection/phrases-quiz-selection.component';\r\nimport { CategoryListComponent } from './category/category-list/category-list.component';\r\nimport { CategoryDetailComponent } from './category/category-detail/category-detail.component';\r\n\r\nimport { SharedModule as SharedAdminModule } from \"./shared/shared.module\";\r\n\r\nconst adminRouting: ModuleWithProviders = RouterModule.forChild([\r\n  {\r\n    path: \"admin\",\r\n    component: AdminComponent,\r\n    children: [\r\n      {\r\n        path: \"quizzes\",\r\n        component: QuizListComponent\r\n      },\r\n      {\r\n        path: \"quiz/:id\",\r\n        component: QuizDetailComponent\r\n      },\r\n      {\r\n        path: \"phrases\",\r\n        component: PhrasesListComponent\r\n      },\r\n      {\r\n        path: \"phrase/:id\",\r\n        component: PhrasesDetailComponent\r\n      },\r\n      {\r\n        path: \"categories\",\r\n        component: CategoryListComponent\r\n      },\r\n      {\r\n        path: \"category/:id\",\r\n        component: CategoryDetailComponent\r\n      }\r\n    ]\r\n  },\r\n]);\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    PhraseModule,\r\n    SharedAdminModule,\r\n    adminRouting\r\n  ],\r\n  declarations: [\r\n    AdminComponent,\r\n    QuizListComponent,\r\n    QuizDetailComponent,\r\n    PhrasesListComponent,\r\n    PhrasesDetailComponent,\r\n    PhrasesQuizSelectionComponent,\r\n    CategoryListComponent,\r\n    CategoryDetailComponent,\r\n  ]\r\n})\r\nexport class AdminModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/admin.module.ts","module.exports = \"<div *ngIf=\\\"item; then itemBlock else loadingBlock;\\\"></div>\\r\\n<ng-template #itemBlock>\\r\\n  <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\" >\\r\\n    <h1>Category - {{item.name}}</h1>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"name\\\">Category name:</label>\\r\\n      <input type=\\\"text\\\" id=\\\"name\\\" name=\\\"name\\\" required [(ngModel)]=\\\"item.name\\\">\\r\\n    </div>\\r\\n    <br>\\r\\n    <input type=\\\"submit\\\" [value]=\\\"isNew ? 'Create Category' : 'Update Category'\\\">\\r\\n    <div *ngIf=\\\"isWaitingForServer\\\">\\r\\n      Processing server request ...\\r\\n    </div>\\r\\n    <div *ngIf=\\\"error\\\" class=\\\"form-error\\\">\\r\\n      {{error}}\\r\\n    </div>\\r\\n  </form>\\r\\n</ng-template>\\r\\n<ng-template #loadingBlock>\\r\\n  fetching category ...\\r\\n</ng-template>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/category/category-detail/category-detail.component.html\n// module id = ../../../../../src/app/admin/category/category-detail/category-detail.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/category/category-detail/category-detail.component.less\n// module id = ../../../../../src/app/admin/category/category-detail/category-detail.component.less\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from \"../../../shared/services/api.service\";\r\nimport { Category } from \"../../../shared/models/category.model\";\r\nimport { CategoryGetDetailResponse, CategoryPostCreateResponse, DefaultSuccessResponse } from \"../../../shared/models/httpresponses\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { NgForm } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: 'app-admin-category-detail',\r\n  templateUrl: './category-detail.component.html',\r\n  styleUrls: ['./category-detail.component.less']\r\n})\r\nexport class CategoryDetailComponent implements OnInit {\r\n  public item: Category;\r\n  public isNew: boolean;\r\n  public isWaitingForServer: boolean;\r\n  public error: string;\r\n\r\n  constructor (private route: ActivatedRoute, private router: Router, private apiService: ApiService) {\r\n    this.item = null;\r\n    this.isNew = false;\r\n\r\n    this.isWaitingForServer = false;\r\n    this.error = null;\r\n  }\r\n\r\n  ngOnInit () {\r\n    this.route.params.subscribe((params) => {\r\n      const id = parseInt(params.id, 10);\r\n\r\n      if (Number.isNaN(id) || id === -1) {\r\n        this.item = {\r\n          id: -1,\r\n          name: \"\"\r\n        };\r\n        this.isNew = true;\r\n      }\r\n      else {\r\n        this.apiService.get(\"category/get/\" + id).then((result: CategoryGetDetailResponse) => {\r\n          this.item = result.category;\r\n          // If invalid quiz then route back to quiz list\r\n          if (!this.item) {\r\n            this.router.navigate(['/admin/categories']);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public createItem (): void {\r\n    this.isWaitingForServer = true;\r\n    this.error = null;\r\n\r\n    this.apiService.post(\"category/create\", this.item)\r\n      .then((result: CategoryPostCreateResponse) => {\r\n        // If quiz isn't null\r\n        if (result.category) {\r\n          this.item.id = result.category.id;\r\n          // If success show that it was updated?\r\n          this.isNew = false;\r\n          this.router.navigate(['/admin/category/' + result.category.id]);\r\n        }\r\n        else {\r\n          this.error = result.error;\r\n        }\r\n        this.isWaitingForServer = false;\r\n      });\r\n  }\r\n\r\n  public updateItem (): void {\r\n    this.isWaitingForServer = true;\r\n    this.error = null;\r\n\r\n    this.apiService.post(\"category/update\", this.item)\r\n      .then((result: DefaultSuccessResponse ) => {\r\n        if (result.success) {\r\n\r\n        }\r\n        else {\r\n          this.error = result.error;\r\n        }\r\n\r\n        this.isWaitingForServer = false;\r\n      });\r\n  }\r\n\r\n  public onSubmit (form: NgForm): void {\r\n    if (form.valid) {\r\n      if (this.isNew) {\r\n        this.createItem();\r\n      }\r\n      else {\r\n        this.updateItem();\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/category/category-detail/category-detail.component.ts","module.exports = \"<h1>Categories</h1>\\r\\n<a [routerLink]=\\\"['../category', -1]\\\">Create new category</a>\\r\\n\\r\\n<app-admin-entity-list\\r\\n  [entities]=\\\"items\\\"\\r\\n  [keys]=\\\"['name']\\\"\\r\\n  [keysPretty]=\\\"{ 'name': 'Category Name' }\\\"\\r\\n  [editUrl]=\\\"'../category'\\\"\\r\\n  [removeUrl]=\\\"'category/remove'\\\"\\r\\n>\\r\\n</app-admin-entity-list>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/category/category-list/category-list.component.html\n// module id = ../../../../../src/app/admin/category/category-list/category-list.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/category/category-list/category-list.component.less\n// module id = ../../../../../src/app/admin/category/category-list/category-list.component.less\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from \"../../../shared/services/api.service\";\r\nimport { Category } from \"../../../shared/models/category.model\";\r\nimport { CategoryGetResponse, DefaultSuccessResponse } from \"../../../shared/models/httpresponses\";\r\n\r\n@Component({\r\n  selector: 'app-admin-category-list',\r\n  templateUrl: './category-list.component.html',\r\n  styleUrls: ['./category-list.component.less']\r\n})\r\nexport class CategoryListComponent implements OnInit {\r\n\r\n  public items: Category[];\r\n\r\n  constructor (private apiService: ApiService) {\r\n    this.items = [];\r\n  }\r\n\r\n  ngOnInit () {\r\n    this.apiService.get(\"category/get\").then((response: CategoryGetResponse) => {\r\n      this.items = response.categories || [];\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/category/category-list/category-list.component.ts","module.exports = \"<div *ngIf=\\\"item && categories.length > 0; then itemBlock else loadingBlock;\\\"></div>\\r\\n<ng-template #itemBlock>\\r\\n  <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\" >\\r\\n    <h1>Phrase - {{item.finnish}}</h1>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"finnish\\\">Finnish:</label>\\r\\n      <input type=\\\"text\\\" id=\\\"finnish\\\" name=\\\"finnish\\\" required [(ngModel)]=\\\"item.finnish\\\">\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"english\\\">English:</label>\\r\\n      <input type=\\\"text\\\" id=\\\"english\\\" name=\\\"english\\\" required [(ngModel)]=\\\"item.english\\\">\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"note\\\">Note:</label>\\r\\n      <input type=\\\"text\\\" id=\\\"note\\\" name=\\\"note\\\" [(ngModel)]=\\\"item.note\\\">\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"category\\\">Category</label>\\r\\n      <select id=\\\"category\\\" name=\\\"category\\\" [(ngModel)]=\\\"item.category\\\">\\r\\n        <option *ngFor=\\\"let category of categories\\\"\\r\\n                [ngValue]=\\\"category\\\"\\r\\n        >{{category.name}}</option>\\r\\n      </select>\\r\\n    </div>\\r\\n    <br>\\r\\n    <input type=\\\"submit\\\" [value]=\\\"isNew ? 'Create Phrase' : 'Update Phrase'\\\">\\r\\n    <div *ngIf=\\\"isWaitingForServer\\\">\\r\\n      Processing server request ...\\r\\n    </div>\\r\\n    <div *ngIf=\\\"error\\\" class=\\\"form-error\\\">\\r\\n      {{error}}\\r\\n    </div>\\r\\n  </form>\\r\\n</ng-template>\\r\\n<ng-template #loadingBlock>\\r\\n  fetching phrase ...\\r\\n  <div *ngIf=\\\"error\\\" class=\\\"form-error\\\">\\r\\n    {{error}}\\r\\n  </div>\\r\\n</ng-template>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/phrases/phrases-detail/phrases-detail.component.html\n// module id = ../../../../../src/app/admin/phrases/phrases-detail/phrases-detail.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/phrases/phrases-detail/phrases-detail.component.less\n// module id = ../../../../../src/app/admin/phrases/phrases-detail/phrases-detail.component.less\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from \"../../../shared/services/api.service\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { Category } from \"../../../shared/models/category.model\";\r\nimport { Phrase } from \"../../../shared/models/phrase.model\";\r\nimport {\r\n  CategoryGetResponse, DefaultSuccessResponse,\r\n  PhraseGetDetailResponse, PhrasePostCreateResponse\r\n} from \"../../../shared/models/httpresponses\";\r\nimport { NgForm } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: 'app-admin-phrases-detail',\r\n  templateUrl: './phrases-detail.component.html',\r\n  styleUrls: ['./phrases-detail.component.less']\r\n})\r\nexport class PhrasesDetailComponent implements OnInit {\r\n  public categories: Category[];\r\n\r\n  public item: Phrase;\r\n  public isNew: boolean;\r\n  public isWaitingForServer: boolean;\r\n  public error: string;\r\n\r\n  constructor (private route: ActivatedRoute, private router: Router, private apiService: ApiService) {\r\n    this.item = null;\r\n    this.isNew = false;\r\n    this.categories = [];\r\n\r\n    this.isWaitingForServer = false;\r\n    this.error = null;\r\n  }\r\n\r\n  ngOnInit () {\r\n    /**\r\n     * Try and set the actual category reference so ngModel works properly.\r\n     */\r\n    const trySetCategory = (): void => {\r\n      if (this.categories.length > 0 && this.item) {\r\n        const category = this.categories.find((item: Category) => {\r\n          return item.id === this.item.category.id;\r\n        });\r\n\r\n        this.item.category = category;\r\n      }\r\n    };\r\n\r\n    // Get all categories\r\n    this.apiService.get(\"category/get\").then((result: CategoryGetResponse) => {\r\n\r\n      // If server would return faulty\r\n      if (!result.categories || result.categories.length <= 0) {\r\n        this.error = \"Failed to load categories.\";\r\n      }\r\n      else {\r\n        this.categories = result.categories;\r\n      }\r\n\r\n      trySetCategory();\r\n    });\r\n\r\n    this.route.params.subscribe((params) => {\r\n      const id = parseInt(params.id, 10);\r\n\r\n      if (Number.isNaN(id) || id === -1) {\r\n        this.item = {\r\n          id: -1,\r\n          finnish: \"\",\r\n          english: \"\",\r\n          note: \"\",\r\n          // This category will be replaced as soon as trySetCategory() is finished\r\n          category: {\r\n            id: 1, // The uncategorised Id is 1\r\n            name: \"\"\r\n          }\r\n        };\r\n        this.isNew = true;\r\n        trySetCategory();\r\n      }\r\n      else {\r\n        this.apiService.get(\"phrase/get/\" + id).then((result: PhraseGetDetailResponse) => {\r\n          this.item = result.phrase;\r\n          // If invalid quiz then route back to quiz list\r\n          if (!this.item) {\r\n            this.router.navigate(['/admin/phrases']);\r\n            return;\r\n          }\r\n\r\n          trySetCategory();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public createItem (): void {\r\n    this.isWaitingForServer = true;\r\n    this.error = null;\r\n\r\n    this.apiService.post(\"phrase/create\", {\r\n      id: this.item.id,\r\n      finnish: this.item.finnish,\r\n      english: this.item.english,\r\n      note: this.item.note,\r\n      categoryId: this.item.category.id,\r\n      categoryName: this.item.category.name\r\n    })\r\n    .then((result: PhrasePostCreateResponse) => {\r\n      // If quiz isn't null\r\n      if (result.phrase) {\r\n        this.item.id = result.phrase.id;\r\n        // If success show that it was updated?\r\n        this.isNew = false;\r\n        this.router.navigate(['/admin/phrase/' + result.phrase.id]);\r\n      }\r\n      else {\r\n        this.error = result.error;\r\n      }\r\n      this.isWaitingForServer = false;\r\n    });\r\n  }\r\n\r\n  public updateItem (): void {\r\n    this.isWaitingForServer = true;\r\n    this.error = null;\r\n\r\n    this.apiService.post(\"phrase/update\", {\r\n      id: this.item.id,\r\n      finnish: this.item.finnish,\r\n      english: this.item.english,\r\n      note: this.item.note,\r\n      categoryId: this.item.category.id,\r\n      categoryName: this.item.category.name\r\n    })\r\n    .then((result: DefaultSuccessResponse ) => {\r\n      if (result.success) {\r\n\r\n      }\r\n      else {\r\n        this.error = result.error;\r\n      }\r\n\r\n      this.isWaitingForServer = false;\r\n    });\r\n  }\r\n\r\n  public onSubmit (form: NgForm): void {\r\n    if (form.valid) {\r\n      if (this.isNew) {\r\n        this.createItem();\r\n      }\r\n      else {\r\n        this.updateItem();\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/phrases/phrases-detail/phrases-detail.component.ts","module.exports = \"<h1>Phrases</h1>\\r\\n<a [routerLink]=\\\"['../phrase', -1]\\\">Create new phrase</a>\\r\\n<ul class=\\\"item-list\\\">\\r\\n  <li *ngFor=\\\"let phrasesByCategory of phrasesByCategories\\\">\\r\\n    <h2>{{phrasesByCategory.category.name}}</h2>\\r\\n    <app-admin-entity-list\\r\\n       [entities]=\\\"phrasesByCategory.phrases\\\"\\r\\n       [editUrl]=\\\"'../phrase'\\\"\\r\\n       [removeUrl]=\\\"'phrase/remove'\\\"\\r\\n       [keys]=\\\"['finnish']\\\"\\r\\n       [titles]=\\\"{ 'finnish': 'english' }\\\"\\r\\n       [keysPretty]=\\\"{ 'finnish': 'Finnish' }\\\"\\r\\n       (removed)=\\\"removedPhrase($event)\\\"\\r\\n    >\\r\\n    </app-admin-entity-list>\\r\\n  </li>\\r\\n</ul>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/phrases/phrases-list/phrases-list.component.html\n// module id = ../../../../../src/app/admin/phrases/phrases-list/phrases-list.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"ul {\\n  padding: 0 0 0 0px;\\n  list-style: none;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/phrases/phrases-list/phrases-list.component.less\n// module id = ../../../../../src/app/admin/phrases/phrases-list/phrases-list.component.less\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from \"../../../shared/services/api.service\";\r\nimport { Phrase } from \"../../../shared/models/phrase.model\";\r\nimport { DefaultSuccessResponse, PhraseGetResponse } from \"../../../shared/models/httpresponses\";\r\nimport { PhrasesByCategory } from \"../../../shared/models/phrases-by-category.model\";\r\n\r\nimport { EntityListComponent } from \"../../shared/entity-list/entity-list.component\";\r\n\r\n@Component({\r\n  selector: 'app-admin-phrases-list',\r\n  templateUrl: './phrases-list.component.html',\r\n  styleUrls: ['./phrases-list.component.less']\r\n})\r\nexport class PhrasesListComponent implements OnInit {\r\n\r\n  public phrasesByCategories: PhrasesByCategory[];\r\n\r\n  constructor (private apiService: ApiService) {\r\n    this.phrasesByCategories = [];\r\n  }\r\n\r\n  ngOnInit () {\r\n    this.apiService.get(\"phrase/get\").then((response: PhraseGetResponse) => {\r\n      const phrases = response.phrases || [];\r\n\r\n      for (let i = 0; i < phrases.length; i++) {\r\n        const phrase: Phrase = phrases[i];\r\n\r\n        let phraseByCategory: PhrasesByCategory = this.phrasesByCategories.find((item: PhrasesByCategory) => {\r\n          return item.category.id === phrase.category.id;\r\n        });\r\n\r\n        if (!phraseByCategory) {\r\n          phraseByCategory = {\r\n            category: phrase.category,\r\n            phrases: []\r\n          };\r\n\r\n          this.phrasesByCategories.push(phraseByCategory);\r\n        }\r\n\r\n        phraseByCategory.phrases.push(phrase);\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Remove the phrase from the PhrasesByCategories list\r\n   * @param {Phrase} phrase\r\n   */\r\n  public removedPhrase (phrase: Phrase) {\r\n    const phrasesByCategory = this.phrasesByCategories.find((item: PhrasesByCategory) => {\r\n      return item.category.id === phrase.category.id;\r\n    });\r\n\r\n    const index = phrasesByCategory.phrases.indexOf(phrase);\r\n    if (index !== -1) {\r\n     phrasesByCategory.phrases.splice(index, 1);\r\n    }\r\n\r\n    if ( phrasesByCategory.phrases.length <= 0 ) {\r\n      const categoryListIndex = this.phrasesByCategories.indexOf(phrasesByCategory);\r\n      this.phrasesByCategories.splice(categoryListIndex, 1);\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/phrases/phrases-list/phrases-list.component.ts","module.exports = \"<div class=\\\"selected-phrases phrases\\\">\\r\\n  <h2>Selected Phrases for quiz:</h2>\\r\\n  <p *ngIf=\\\"selectedError !== ''\\\" class=\\\"form-error\\\">\\r\\n    {{selectedError}}\\r\\n  </p>\\r\\n  <app-phrases-selection [phrases]=\\\"selectedPhrases\\\" [emptySelection]=\\\"'No phrases selected for quiz'\\\" (phraseClick)=\\\"removePhraseFromQuiz($event, true)\\\"></app-phrases-selection>\\r\\n</div>\\r\\n<hr>\\r\\n<div class=\\\"unselected-phrases phrases\\\">\\r\\n  <h2>All unselected phrases:</h2>\\r\\n  <p *ngIf=\\\"unselectedError !== ''\\\" class=\\\"form-error\\\">\\r\\n    {{unselectedError}}\\r\\n  </p>\\r\\n  <app-phrases-selection [phrases]=\\\"unselectedPhrases\\\" [emptySelection]=\\\"'No phrases left to add to quiz'\\\" (phraseClick)=\\\"addPhraseToQuiz($event, true)\\\"></app-phrases-selection>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/phrases/phrases-quiz-selection/phrases-quiz-selection.component.html\n// module id = ../../../../../src/app/admin/phrases/phrases-quiz-selection/phrases-quiz-selection.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".phrases {\\n  margin: 15px 0;\\n}\\n.phrases h2 {\\n  margin: 5px 0;\\n}\\nhr {\\n  height: 4px;\\n  background-color: black;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/phrases/phrases-quiz-selection/phrases-quiz-selection.component.less\n// module id = ../../../../../src/app/admin/phrases/phrases-quiz-selection/phrases-quiz-selection.component.less\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from \"../../../shared/services/api.service\";\r\nimport { Phrase } from \"../../../shared/models/phrase.model\";\r\nimport { Input } from \"@angular/core\";\r\nimport { PhraseGetResponse, DefaultSuccessResponse } from \"../../../shared/models/httpresponses\";\r\n\r\nimport { PhrasesSelectionComponent } from \"../../../phrase/phrases-selection/phrases-selection.component\";\r\n\r\n@Component({\r\n  selector: 'app-admin-phrases-quiz-selection',\r\n  templateUrl: './phrases-quiz-selection.component.html',\r\n  styleUrls: ['./phrases-quiz-selection.component.less']\r\n})\r\nexport class PhrasesQuizSelectionComponent implements OnInit {\r\n\r\n  @Input()\r\n  public quizId: number;\r\n  /**\r\n   * The phrases that are selected for the quiz.\r\n   */\r\n  @Input()\r\n  public selectedPhrases: Phrase[];\r\n  /**\r\n   * All phrases minus the selected phrases\r\n   */\r\n  public unselectedPhrases: Phrase[];\r\n\r\n  public selectedError: string;\r\n  public unselectedError: string;\r\n\r\n\r\n  constructor (private apiService: ApiService) {\r\n    this.quizId = -1;\r\n    this.selectedPhrases = [];\r\n    this.unselectedPhrases = [];\r\n\r\n    this.selectedError = \"\";\r\n    this.unselectedError = \"\";\r\n  }\r\n\r\n  ngOnInit () {\r\n    // Get all phrases from server so we can remove the selected ones from the list\r\n    this.apiService.get(\"phrase/get\").then((result: PhraseGetResponse) => {\r\n      const phrases = result.phrases || [];\r\n\r\n      // Filter out selected ones\r\n      this.unselectedPhrases = phrases.filter((phrase: Phrase) => {\r\n        // Check if selectedPhrases contains one item with the same id\r\n        const isSelected = this.selectedPhrases.find((selectedPhrase: Phrase) => {\r\n          return selectedPhrase.id === phrase.id;\r\n        });\r\n\r\n        return !isSelected;\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Move the phrase from unselectedPhrases to selectedPhrases.\r\n   * Also tells the server to update database with the new phrase.\r\n   * @param {Phrase} phrase\r\n   * @param {boolean} sendRequest\r\n   */\r\n  public addPhraseToQuiz (phrase: Phrase, sendRequest: boolean) {\r\n    this.selectedPhrases.push(phrase);\r\n\r\n    const index = this.unselectedPhrases.indexOf(phrase);\r\n    this.unselectedPhrases.splice( index, 1 );\r\n\r\n    if (sendRequest) {\r\n      this.selectedError = \"\";\r\n\r\n      this.apiService.post(\"quiz/addphrase\", {\r\n        quizId: this.quizId,\r\n        phraseId: phrase.id\r\n      }).then((result: DefaultSuccessResponse) => {\r\n        if (!result.success) {\r\n          this.selectedError = result.error;\r\n          // Move it back to unselected, also since updating database failed theres no need to tell database.\r\n          this.removePhraseFromQuiz(phrase, false);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove the phrase from selectedPhrases and add it to unselectedPhrases.\r\n   * Also tells the server to remove phrase from quiz in database.\r\n   * @param {Phrase} phrase\r\n   * @param {boolean} sendRequest\r\n   */\r\n  public removePhraseFromQuiz (phrase: Phrase, sendRequest: boolean) {\r\n    this.unselectedPhrases.push(phrase);\r\n\r\n    const index = this.selectedPhrases.indexOf(phrase);\r\n    this.selectedPhrases.splice( index, 1 );\r\n\r\n    if (sendRequest) {\r\n      this.unselectedError = \"\";\r\n\r\n      this.apiService.post(\"quiz/removephrase\", {\r\n        quizId: this.quizId,\r\n        phraseId: phrase.id\r\n      }).then((result: DefaultSuccessResponse) => {\r\n        if (!result.success) {\r\n          this.unselectedError = \"\";\r\n          this.addPhraseToQuiz(phrase, false);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/phrases/phrases-quiz-selection/phrases-quiz-selection.component.ts","module.exports = \"<div *ngIf=\\\"quiz; then quizBlock else loadingBlock;\\\"></div>\\r\\n<ng-template #quizBlock>\\r\\n  <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\" >\\r\\n    <h1>Quiz - {{quiz.name}}</h1>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"name\\\">Name:</label>\\r\\n      <input type=\\\"text\\\" id=\\\"name\\\" name=\\\"name\\\" required [(ngModel)]=\\\"quiz.name\\\">\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"description\\\">Description</label>\\r\\n      <input type=\\\"text\\\" id=\\\"description\\\" name=\\\"description\\\" required [(ngModel)]=\\\"quiz.description\\\" >\\r\\n    </div>\\r\\n    <br>\\r\\n    <input type=\\\"submit\\\" [value]=\\\"isNew ? 'Create Quiz' : 'Update Quiz'\\\">\\r\\n\\r\\n    <div *ngIf=\\\"isWaitingForServer\\\">\\r\\n      Processing server request ...\\r\\n    </div>\\r\\n    <div *ngIf=\\\"error\\\" class=\\\"form-error\\\">\\r\\n      {{error}}\\r\\n    </div>\\r\\n\\r\\n    <!-- Add phrases editing component-->\\r\\n    <app-admin-phrases-quiz-selection *ngIf=\\\"!isNew\\\" [selectedPhrases]=\\\"quiz.phrases\\\" [quizId]=\\\"quiz.id\\\" ></app-admin-phrases-quiz-selection>\\r\\n  </form>\\r\\n</ng-template>\\r\\n<ng-template #loadingBlock>\\r\\n  fetching quiz ...\\r\\n</ng-template>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/quiz/quiz-detail/quiz-detail.component.html\n// module id = ../../../../../src/app/admin/quiz/quiz-detail/quiz-detail.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"form {\\n  width: 100%;\\n}\\nlabel {\\n  display: inline-block;\\n  min-width: 100px;\\n}\\n.form-group input,\\n.form-group select {\\n  width: 100%;\\n  max-width: 300px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/quiz/quiz-detail/quiz-detail.component.less\n// module id = ../../../../../src/app/admin/quiz/quiz-detail/quiz-detail.component.less\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { Quiz } from \"../../../shared/models/quiz.model\";\r\n\r\nimport { NgForm } from \"@angular/forms\";\r\n\r\nimport { ApiService } from \"../../../shared/services/api.service\";\r\nimport { QuizGetDetailResponse, QuizPostCreateResponse, DefaultSuccessResponse } from \"../../../shared/models/httpresponses\";\r\nimport { PhrasesQuizSelectionComponent } from \"../../phrases/phrases-quiz-selection/phrases-quiz-selection.component\";\r\n\r\n@Component({\r\n  selector: 'app-admin-quiz-detail',\r\n  templateUrl: './quiz-detail.component.html',\r\n  styleUrls: ['./quiz-detail.component.less']\r\n})\r\nexport class QuizDetailComponent implements OnInit {\r\n\r\n  public quiz: Quiz;\r\n  public isNew: boolean;\r\n  public isWaitingForServer: boolean;\r\n  public error: string;\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router, private apiService: ApiService) {\r\n    this.quiz = null;\r\n    this.isNew = false;\r\n\r\n    this.isWaitingForServer = false;\r\n    this.error = null;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe((params) => {\r\n      const id = parseInt(params.id, 10);\r\n\r\n      if (Number.isNaN(id) || id === -1) {\r\n        this.quiz = {\r\n          id: -1,\r\n          name: \"\",\r\n          description: \"\",\r\n          phrases: []\r\n        };\r\n        this.isNew = true;\r\n      }\r\n      else {\r\n        this.apiService.get(\"quiz/get/\" + id).then((result: QuizGetDetailResponse) => {\r\n          this.quiz = result.quiz;\r\n          // If invalid quiz then route back to quiz list\r\n          if (!this.quiz) {\r\n            this.router.navigate(['/admin/quizzes']);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Create the Quiz in database and navigate to the new quiz url.\r\n   */\r\n  public createQuiz(): void {\r\n    this.isWaitingForServer = true;\r\n    this.error = null;\r\n\r\n    this.apiService.post(\"quiz/create\", this.quiz)\r\n      .then((result: QuizPostCreateResponse) => {\r\n        // If quiz isn't null\r\n        if (result.quiz) {\r\n          this.quiz.id = result.quiz.id;\r\n          // If success show that it was updated?\r\n          this.isNew = false;\r\n          this.router.navigate(['/admin/quiz/' + result.quiz.id]);\r\n        }\r\n        else {\r\n          this.error = result.error;\r\n        }\r\n        this.isWaitingForServer = false;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Update the quiz data\r\n   */\r\n  public updateQuiz(): void {\r\n    this.isWaitingForServer = true;\r\n    this.error = null;\r\n\r\n    this.apiService.post(\"quiz/update\", this.quiz)\r\n      .then((result: DefaultSuccessResponse ) => {\r\n        if (result.success) {\r\n\r\n        }\r\n        else {\r\n          this.error = result.error;\r\n        }\r\n\r\n        this.isWaitingForServer = false;\r\n      });\r\n  }\r\n\r\n  public onSubmit(form: NgForm) {\r\n    if (form.valid) {\r\n      if (this.isNew) {\r\n        this.createQuiz();\r\n      }\r\n      else {\r\n        this.updateQuiz();\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/quiz/quiz-detail/quiz-detail.component.ts","module.exports = \"<h1>Quizzes</h1>\\r\\n<a [routerLink]=\\\"['../quiz', -1]\\\">Create new quiz</a>\\r\\n\\r\\n<app-admin-entity-list\\r\\n  [entities]=\\\"quizzes\\\"\\r\\n  [editUrl]=\\\"'../quiz'\\\"\\r\\n  [removeUrl]=\\\"'quiz/remove'\\\"\\r\\n  [keys]=\\\"['name', 'description']\\\"\\r\\n  [keysPretty]=\\\"{ 'name': 'Quiz Name', 'description': 'Description' }\\\"\\r\\n  >\\r\\n</app-admin-entity-list>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/quiz/quiz-list/quiz-list.component.html\n// module id = ../../../../../src/app/admin/quiz/quiz-list/quiz-list.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/quiz/quiz-list/quiz-list.component.less\n// module id = ../../../../../src/app/admin/quiz/quiz-list/quiz-list.component.less\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Quiz } from \"../../../shared/models/quiz.model\";\r\nimport { QuizGetResponse } from \"../../../shared/models/httpresponses\";\r\nimport { ApiService } from \"../../../shared/services/api.service\";\r\n\r\nimport { EntityListComponent } from \"../../shared/entity-list/entity-list.component\";\r\n\r\n@Component({\r\n  selector: \"app-admin-quiz-list\",\r\n  templateUrl: \"./quiz-list.component.html\",\r\n  styleUrls: [\"./quiz-list.component.less\"]\r\n})\r\nexport class QuizListComponent implements OnInit {\r\n\r\n  public quizzes: Quiz[];\r\n\r\n  constructor (private apiService: ApiService) {\r\n    this.quizzes = [];\r\n  }\r\n\r\n  ngOnInit () {\r\n    this.apiService.get(\"quiz/get\").then((result: QuizGetResponse) => {\r\n      this.quizzes = result.quizzes || [];\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/quiz/quiz-list/quiz-list.component.ts","module.exports = \"<table>\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <td *ngFor=\\\"let key of keys\\\">\\r\\n        {{keysPretty[key]}}\\r\\n      </td>\\r\\n      <td>Actions</td>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let entity of entities\\\" class=\\\"item-tiled\\\">\\r\\n      <td *ngFor=\\\"let key of keys\\\" [title]=\\\"getTitle(entity, key)\\\">{{entity[key]}}</td>\\r\\n      <td class=\\\"actions\\\">\\r\\n        <a [routerLink]=\\\"[editUrl, entity.id]\\\" class=\\\"edit-btn\\\">edit</a>\\r\\n        <button (click)=\\\"remove(entity)\\\">remove</button>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/shared/entity-list/entity-list.component.html\n// module id = ../../../../../src/app/admin/shared/entity-list/entity-list.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"table {\\n  width: 100%;\\n  text-align: left;\\n  -webkit-box-shadow: 0 2px 4px rgba(0, 0, 0, 0.4);\\n          box-shadow: 0 2px 4px rgba(0, 0, 0, 0.4);\\n}\\nthead {\\n  font-size: 14px;\\n  text-transform: uppercase;\\n  background-color: silver;\\n}\\ntd {\\n  padding: 5px;\\n}\\ntd:first-child {\\n  font-weight: bold;\\n}\\ntbody tr:hover {\\n  background-color: aquamarine !important;\\n}\\ntbody tr:nth-child(even) {\\n  background-color: #badbad;\\n}\\ntbody tr:nth-child(odd) {\\n  background-color: #E6E6FA;\\n}\\n.edit-btn {\\n  margin: 0 5px;\\n}\\n.actions {\\n  width: 135px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/shared/entity-list/entity-list.component.less\n// module id = ../../../../../src/app/admin/shared/entity-list/entity-list.component.less\n// module chunks = main","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { ApiService } from \"../../../shared/services/api.service\";\r\nimport { DefaultSuccessResponse } from \"../../../shared/models/httpresponses\";\r\n\r\n@Component({\r\n  selector: 'app-admin-entity-list',\r\n  templateUrl: './entity-list.component.html',\r\n  styleUrls: ['./entity-list.component.less']\r\n})\r\nexport class EntityListComponent implements OnInit {\r\n\r\n  @Input()\r\n  public entities: any[];\r\n  @Input()\r\n  public keys: string[];\r\n  @Input()\r\n  public keysPretty: { [key: string]: string };\r\n  @Input()\r\n  public editUrl: string;\r\n  @Input()\r\n  public removeUrl: string;\r\n  @Input()\r\n  public titles: { [key: string]: string };\r\n\r\n  @Output()\r\n  public removed: EventEmitter<any>;\r\n\r\n  constructor(private apiService: ApiService) {\r\n    this.entities = [];\r\n    this.keys = [];\r\n    this.keysPretty = {};\r\n    this.editUrl = \"\";\r\n    this.titles = {};\r\n\r\n    this.removed = new EventEmitter<any>();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public getTitle(entity: any, key: string) {\r\n    if (this.titles[key]) {\r\n      return entity[this.titles[key]];\r\n    }\r\n\r\n    return \"\";\r\n  }\r\n\r\n  public remove (entity: any) {\r\n    this.apiService.post(this.removeUrl, entity)\r\n    .then((result: DefaultSuccessResponse) => {\r\n      if (result.success) {\r\n        const index = this.entities.indexOf(entity);\r\n        if (index !== -1) {\r\n         this.entities.splice(index, 1);\r\n         this.removed.emit(entity);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/shared/entity-list/entity-list.component.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from \"@angular/router\";\r\n\r\nimport { EntityListComponent } from \"./entity-list/entity-list.component\";\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule\r\n  ],\r\n  declarations: [\r\n    EntityListComponent\r\n  ],\r\n  exports: [\r\n    EntityListComponent\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/admin/shared/shared.module.ts","module.exports = \"<div class=\\\"content\\\">\\r\\n  <app-header></app-header>\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/app.component.less\n// module id = ../../../../../src/app/app.component.less\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.less']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\n\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './shared/layout/header/header.component';\r\n\r\nimport { AdminModule } from './admin/admin.module';\r\nimport { SharedModule } from \"./shared/shared.module\";\r\nimport { HomeModule } from \"./home/home.module\";\r\nimport { PhraseModule } from \"./phrase/phrase.module\";\r\nimport { QuizModule } from \"./quiz/quiz.module\";\r\n\r\nconst rootRouting: ModuleWithProviders = RouterModule.forRoot([]);\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    SharedModule,\r\n    HomeModule,\r\n    PhraseModule,\r\n    QuizModule,\r\n    AdminModule,\r\n    rootRouting\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/app.module.ts","module.exports = \"<p>\\r\\n  Choose between a quiz with already selected phrases.\\r\\n  <br>\\r\\n  Or all phrases in a category.\\r\\n  <br>\\r\\n  Or select between all available phrases.\\r\\n</p>\\r\\n<h1>Quizzes</h1>\\r\\n<app-quiz-selection [items]=\\\"quizzes\\\" (selected)=\\\"quizSelected($event)\\\"></app-quiz-selection>\\r\\n\\r\\n<h1>Test a category</h1>\\r\\n<app-quiz-selection  [items]=\\\"categories\\\" (selected)=\\\"categorySelected($event)\\\"></app-quiz-selection>\\r\\n\\r\\n<h1>Select between all phrases</h1>\\r\\n<button>Click me!!, I do nothing</button>\\r\\n<hr>\\r\\n<ng-container *ngIf=\\\"selectedQuiz; then selectedBlock else needSelectionBlock;\\\"></ng-container>\\r\\n<ng-template #selectedBlock>\\r\\n  <div>\\r\\n    <h2>Quiz - {{selectedQuiz.name}}</h2>\\r\\n    <p>\\r\\n      {{selectedQuiz.description}}\\r\\n      <br>\\r\\n      Phrases count: <strong>{{selectedQuiz.phrases.length}}</strong>\\r\\n      <br>\\r\\n      <label for=\\\"quiztype\\\">Select type of quiz</label>\\r\\n      <select id=\\\"quiztype\\\" name=\\\"quiztype\\\" [(ngModel)]=\\\"quizType\\\" >\\r\\n        <option *ngFor=\\\"let key of QuizTypeKeys\\\" [value]=\\\"key\\\" [label]=\\\"QuizTypes[key]\\\" ></option>\\r\\n      </select>\\r\\n      <br>\\r\\n      <button (click)=\\\"startQuiz()\\\">Start quiz</button>\\r\\n    </p>\\r\\n  </div>\\r\\n</ng-template>\\r\\n<ng-template #needSelectionBlock>\\r\\n  <p *ngIf=\\\"isFetchingQuiz\\\">\\r\\n    Loading quiz...\\r\\n  </p>\\r\\n  <p *ngIf=\\\"error.length > 0\\\" class=\\\"form-error\\\">\\r\\n    {{error}}\\r\\n  </p>\\r\\n  <p *ngIf=\\\"!isFetchingQuiz && error.length === 0\\\">\\r\\n    You need to select a quiz before you can continue.\\r\\n  </p>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/home/home.component.html\n// module id = ../../../../../src/app/home/home.component.html\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/home/home.component.less\n// module id = ../../../../../src/app/home/home.component.less\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { ApiService } from \"../shared/services/api.service\";\r\nimport { Quiz } from \"../shared/models/quiz.model\";\r\nimport { Category } from \"../shared/models/category.model\";\r\nimport { CategoryGetResponse, PhraseGetResponse, QuizGetDetailResponse, QuizGetResponse } from \"../shared/models/httpresponses\";\r\nimport { QuizService } from \"../quiz/quiz.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { QuizType } from \"../shared/enums/quiz-type.enum\";\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.less']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  public quizzes: Quiz[];\r\n  public categories: Category[];\r\n  public quizType: QuizType;\r\n  public QuizTypeKeys: any[];\r\n  public QuizTypes = QuizType;\r\n\r\n  public selectedQuiz: Quiz;\r\n\r\n  public isFetchingQuiz: boolean;\r\n  public error: string;\r\n\r\n  private _testQuiz: Quiz;\r\n\r\n  constructor (private quizService: QuizService,  private apiService: ApiService, private router: Router) {\r\n    this.quizzes = [];\r\n    this.categories = [];\r\n    // Maintain the quizType from last quiz.\r\n    this.quizType = this.quizService.quizType;\r\n\r\n    this.selectedQuiz = null;\r\n    this.isFetchingQuiz = false;\r\n    this.error = \"\";\r\n\r\n    this.QuizTypeKeys = Object.keys(this.QuizTypes).filter(key => !isNaN(Number(key)) );\r\n  }\r\n\r\n  ngOnInit () {\r\n    // this.apiService.get(\"quiz/hasphrases\").then((result: QuizGetResponse) => {\r\n    //   this.quizzes = result.quizzes || [];\r\n    // });\r\n\r\n    const fruitCategory: Category = {\r\n      id: 1,\r\n      name: \"Fruit\"\r\n    };\r\n\r\n    this._testQuiz = {\r\n      id: -1,\r\n      name: \"Fruit Quiz\",\r\n      description: \"Fruits!\",\r\n      phrases: [\r\n        {\r\n          category: fruitCategory,\r\n          english: \"apple\",\r\n          finnish: \"omena\",\r\n          id: 1,\r\n          note: \"\"\r\n        },\r\n        {\r\n          category: fruitCategory,\r\n          english: \"banana\",\r\n          finnish: \"banaani\",\r\n          id: 2,\r\n          note: \"\"\r\n        },\r\n        {\r\n          category: fruitCategory,\r\n          english: \"orange\",\r\n          finnish: \"appelsiini\",\r\n          id: 3,\r\n          note: \"\"\r\n        },\r\n        {\r\n          category: fruitCategory,\r\n          english: \"strawberry\",\r\n          finnish: \"mansikka\",\r\n          id: 4,\r\n          note: \"\"\r\n        },\r\n        {\r\n          category: fruitCategory,\r\n          english: \"blueberry\",\r\n          finnish: \"mustikka\",\r\n          id: 5,\r\n          note: \"\"\r\n        }\r\n      ]\r\n    };\r\n\r\n    this.quizzes.push(this._testQuiz);\r\n\r\n    this.categories.push( fruitCategory );\r\n\r\n    // this.apiService.get(\"category/hasphrases\").then((result: CategoryGetResponse) => {\r\n    //   this.categories = result.categories || [];\r\n    // });\r\n  }\r\n\r\n  public quizSelected (quiz: Quiz): void {\r\n    this.setSelectedQuiz(quiz);\r\n\r\n    // this.isFetchingQuiz = true;\r\n    // this.selectedQuiz = null;\r\n    // this.error = \"\";\r\n    //\r\n    // this.apiService.get(\"quiz/get/\" + quiz.id).then((result: QuizGetDetailResponse) => {\r\n    //   this.isFetchingQuiz = false;\r\n    //\r\n    //   if (result.quiz) {\r\n    //     if (result.quiz.phrases.length > 0) {\r\n    //       this.setSelectedQuiz(result.quiz);\r\n    //     }\r\n    //     else {\r\n    //       this.error = \"There are no phrases for that quiz.\";\r\n    //       const index = this.quizzes.indexOf(quiz);\r\n    //       this.quizzes.splice(index, 1);\r\n    //     }\r\n    //   }\r\n    //   else {\r\n    //     this.error = result.error;\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  public categorySelected (category: Category): void {\r\n    this.isFetchingQuiz = true;\r\n    this.selectedQuiz = null;\r\n    this.error = \"\";\r\n\r\n    this.setSelectedQuiz(this._testQuiz);\r\n  }\r\n\r\n  public startQuiz (): void {\r\n    if (!this.validateQuiz()) {\r\n      return;\r\n    }\r\n\r\n    this.quizService.quiz = this.selectedQuiz;\r\n    // quizType.Text = '0' instead of 0 causing issues\r\n    this.quizService.quizType = parseInt(\"\" + this.quizType, 10);\r\n    this.router.navigate(['quiz']);\r\n  }\r\n\r\n  private setSelectedQuiz (quiz: Quiz) {\r\n    this.selectedQuiz = quiz;\r\n\r\n    // TODO: If phrases.length < phrasesPerQuestion then auto select text and maybe even make multiple questions choice invalid\r\n  }\r\n\r\n  private validateQuiz (): boolean {\r\n    // Make sure quiz is selected\r\n    if (!this.selectedQuiz || this.selectedQuiz.phrases.length <= 0) {\r\n      return false;\r\n    }\r\n    // Make sure quizType is a valid type\r\n    if (!QuizType[this.quizType]) {\r\n      return false;\r\n    }\r\n    // Make sure the quiz has enough phrases if multiple choices is selected\r\n    if (this.quizType === QuizType.MultipleChoices && this.selectedQuiz.phrases.length < this.quizService.phrasesPerQuestion) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/home/home.component.ts","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home.component';\r\nimport { QuizModule } from \"../quiz/quiz.module\";\r\nimport { FormsModule } from \"@angular/forms\";\r\n\r\nconst homeRouting: ModuleWithProviders = RouterModule.forChild([\r\n  {\r\n    path: \"\",\r\n    component: HomeComponent\r\n  }\r\n]);\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    QuizModule,\r\n    homeRouting\r\n  ],\r\n  declarations: [HomeComponent]\r\n})\r\nexport class HomeModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/home/home.module.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PhrasesSelectionComponent } from \"./phrases-selection/phrases-selection.component\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    PhrasesSelectionComponent\r\n  ],\r\n  exports: [\r\n    PhrasesSelectionComponent\r\n  ]\r\n})\r\nexport class PhraseModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/phrase/phrase.module.ts","module.exports = \"<div class=\\\"phrases-by-category-list\\\">\\r\\n  <div *ngFor=\\\"let item of phrasesByCategory\\\">\\r\\n    <div *ngIf=\\\"item.phrases.length > 0\\\" class=\\\"phrases-by-category-item\\\">\\r\\n      <h3>{{item.category.name}}</h3>\\r\\n      <ul class=\\\"phrases-list\\\">\\r\\n        <li *ngFor=\\\"let phrase of item.phrases\\\" class=\\\"phrase-item\\\" title=\\\"{{phrase.english}}\\\" (click)=\\\"onPhraseClicked(phrase)\\\">\\r\\n          {{phrase.finnish}}\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"phrases.length === 0\\\">\\r\\n    <p>\\r\\n      {{emptySelection}}\\r\\n    </p>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/phrase/phrases-selection/phrases-selection.component.html\n// module id = ../../../../../src/app/phrase/phrases-selection/phrases-selection.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"h3 {\\n  margin: 0;\\n}\\n.phrases-list {\\n  margin: 0;\\n  list-style: none;\\n  padding: 0;\\n}\\n.phrases-list .phrase-item {\\n  display: inline-block;\\n  background: -webkit-gradient(linear, left top, left bottom, from(#badbad), to(#a6d095));\\n  background: linear-gradient(#badbad, #a6d095);\\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.18);\\n  border-radius: 5px;\\n  padding: 10px;\\n  cursor: pointer;\\n  margin-right: 5px;\\n  font-weight: bold;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/phrase/phrases-selection/phrases-selection.component.less\n// module id = ../../../../../src/app/phrase/phrases-selection/phrases-selection.component.less\n// module chunks = main","import { Component, Input, Output, OnInit, EventEmitter, IterableDiffers, IterableDiffer } from \"@angular/core\";\r\nimport { Phrase } from \"../../shared/models/phrase.model\";\r\nimport { PhrasesByCategory } from \"../../shared/models/phrases-by-category.model\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-phrases-selection',\r\n  templateUrl: './phrases-selection.component.html',\r\n  styleUrls: ['./phrases-selection.component.less']\r\n})\r\nexport class PhrasesSelectionComponent implements OnInit {\r\n\r\n  @Input()\r\n  public phrases: Phrase[];\r\n  @Input()\r\n  public emptySelection: string;\r\n\r\n  // All phrases grouped by the category.\r\n  public phrasesByCategory: PhrasesByCategory[];\r\n\r\n  @Output()\r\n  public phraseClick: EventEmitter<Phrase>;\r\n\r\n  // An IterableDiffer that listens to the changes of the \"phrases\" input array.\r\n  private m_phrasesDiffer: IterableDiffer<Phrase>;\r\n\r\n  constructor (private _iterableDiffers: IterableDiffers) {\r\n    this.phrases = [];\r\n    this.phraseClick = new EventEmitter<Phrase>();\r\n\r\n    this.phrasesByCategory = [];\r\n\r\n    this.m_phrasesDiffer = this._iterableDiffers.find(this.phrases).create(null);\r\n  }\r\n\r\n  ngOnInit () {\r\n\r\n  }\r\n\r\n  ngDoCheck () {\r\n    const changes = this.m_phrasesDiffer.diff(this.phrases);\r\n    if (changes) {\r\n      changes.forEachAddedItem((changeRecord) => {\r\n        this.addPhraseToCategoryList(changeRecord.item);\r\n      });\r\n\r\n      changes.forEachRemovedItem((changeRecord) => {\r\n        this.removePhraseFromCategoryList(changeRecord.item);\r\n      });\r\n\r\n      this.sortPhrasesByCategory();\r\n    }\r\n  }\r\n\r\n  public onPhraseClicked (phrase: Phrase) {\r\n    this.phraseClick.emit(phrase);\r\n  }\r\n\r\n  /**\r\n   * Add a phrase to the phrases by category list.\r\n   * @param {Phrase} phrase\r\n   */\r\n  private addPhraseToCategoryList (phrase: Phrase) {\r\n    let phraseByCategory: PhrasesByCategory = this.phrasesByCategory.find((item: PhrasesByCategory) => {\r\n      return item.category.id === phrase.category.id;\r\n    });\r\n\r\n    if (!phraseByCategory) {\r\n      phraseByCategory = {\r\n        category: phrase.category,\r\n        phrases: []\r\n      };\r\n\r\n      this.phrasesByCategory.push(phraseByCategory);\r\n    }\r\n\r\n    phraseByCategory.phrases.push(phrase);\r\n  }\r\n\r\n  /**\r\n   * Remove a phrase from phrases by category list.\r\n   * @param {Phrase} phrase\r\n   */\r\n  private removePhraseFromCategoryList (phrase: Phrase) {\r\n    const phraseByCategory: PhrasesByCategory = this.phrasesByCategory.find((item: PhrasesByCategory) => {\r\n      return item.category.id === phrase.category.id;\r\n    });\r\n\r\n    if (phraseByCategory) {\r\n      for (let i = 0; i < phraseByCategory.phrases.length; i++) {\r\n        if (phraseByCategory.phrases[i].id === phrase.id) {\r\n          phraseByCategory.phrases.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (phraseByCategory.phrases.length <= 0) {\r\n        const index = this.phrasesByCategory.indexOf(phraseByCategory);\r\n        this.phrasesByCategory.splice(index, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sort the phrases by category list by category name\r\n   * Also sorts the phrases inside each category list by the phrase name.\r\n   */\r\n  private sortPhrasesByCategory () {\r\n    // Sort based off category name\r\n    this.phrasesByCategory.sort((a: PhrasesByCategory, b: PhrasesByCategory): number => {\r\n      const aName = a.category.name.toLowerCase();\r\n      const bName = b.category.name.toLowerCase();\r\n\r\n      if (aName < bName) { return -1; }\r\n      if (aName > bName) { return 1; }\r\n      return 0;\r\n    });\r\n\r\n    this.phrasesByCategory.forEach((categoryList: PhrasesByCategory) => {\r\n      categoryList.phrases.sort((a: Phrase, b: Phrase) => {\r\n        const aName = a.finnish.toLowerCase();\r\n        const bName = b.finnish.toLowerCase();\r\n\r\n        if (aName < bName) { return -1; }\r\n        if (aName > bName) { return 1; }\r\n        return 0;\r\n      });\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/phrase/phrases-selection/phrases-selection.component.ts","module.exports = \"<ul class=\\\"answers\\\">\\r\\n    <li class=\\\"answer\\\" *ngFor=\\\"let option of question.options; let i = index;\\\">\\r\\n        <label >\\r\\n            <input type=\\\"radio\\\" name=\\\"{{'question_' + question.index}}\\\" value=\\\"{{i}}\\\" (change)=\\\"questionAnswered(i)\\\">\\r\\n            <span class=\\\"answer-text\\\">{{option.value}}</span>\\r\\n            <span *ngIf=\\\"showNote && option.note.length > 0\\\"> - ( {{option.note}} )</span>\\r\\n        </label>\\r\\n    </li>\\r\\n</ul>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/quiz/quiz-multiple-question/quiz-multiple-question.component.html\n// module id = ../../../../../src/app/quiz/quiz-multiple-question/quiz-multiple-question.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"ul {\\n  margin: 5px 0;\\n  padding: 0;\\n  list-style: none;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/quiz/quiz-multiple-question/quiz-multiple-question.component.less\n// module id = ../../../../../src/app/quiz/quiz-multiple-question/quiz-multiple-question.component.less\n// module chunks = main","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { MultipleQuestion } from \"../../shared/models/multiple-question\";\r\n\r\n@Component({\r\n  selector: 'app-quiz-multiple-question',\r\n  templateUrl: './quiz-multiple-question.component.html',\r\n  styleUrls: ['./quiz-multiple-question.component.less']\r\n})\r\nexport class QuizMultipleQuestionComponent implements OnInit {\r\n\r\n  @Input()\r\n  public question: MultipleQuestion;\r\n  @Output()\r\n  public answered: EventEmitter<MultipleQuestion>;\r\n\r\n  public showNote: boolean;\r\n\r\n  constructor () {\r\n    this.question = null;\r\n    this.answered = new EventEmitter<MultipleQuestion>();\r\n    this.showNote = false;\r\n  }\r\n\r\n  ngOnInit () {\r\n    if (this.checkIdenticalOptions()) {\r\n      this.showNote = true;\r\n    }\r\n  }\r\n\r\n  public questionAnswered (answer: number) {\r\n    this.question.answer = answer;\r\n    this.answered.emit(this.question);\r\n  }\r\n\r\n  /**\r\n   * Check if the options are identical in value.\r\n   * It splits the /\r\n   * @return {boolean}\r\n   */\r\n  private checkIdenticalOptions (): boolean {\r\n    for (let a  = 0; a < this.question.options.length; a++) {\r\n      const optionsA: string[] = this.question.options[a].value.split('/').map(value => {\r\n        return value.trim().toLowerCase();\r\n      });\r\n\r\n      for (let b = 0; b < this.question.options.length; b++) {\r\n        if (b === a) {\r\n          continue;\r\n        }\r\n\r\n        const optionsB: string[] = this.question.options[b].value.split('/').map(value => {\r\n          return value.trim().toLowerCase();\r\n        });\r\n\r\n        for (let i = 0; i < optionsB.length; i++) {\r\n          if (optionsA.includes(optionsB[i])) {\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/quiz/quiz-multiple-question/quiz-multiple-question.component.ts","module.exports = \"<div [ngClass]=\\\"{ 'question-passed': (isReviewed && question.isCorrect), 'question-failed': (isReviewed && !question.isCorrect), 'question-container': true }\\\">\\r\\n  <strong class=\\\"question-index\\\">{{question.index + 1}}:</strong>\\r\\n  <strong class=\\\"question-question\\\">{{question.question}}</strong>\\r\\n  <span class=\\\"question-note\\\" *ngIf=\\\"question.note.length > 0\\\"> - ( {{question.note}} )</span>\\r\\n  <br>\\r\\n  <div class=\\\"question-answers\\\">\\r\\n    <app-quiz-text-question\\r\\n    *ngIf=\\\"type === QuizTypes.Text\\\"\\r\\n    [question]=\\\"question\\\"\\r\\n    [isReviewed]=\\\"isReviewed\\\"\\r\\n    (answered)=\\\"questionAnswered($event)\\\"\\r\\n    ></app-quiz-text-question>\\r\\n\\r\\n    <app-quiz-multiple-question\\r\\n      *ngIf=\\\"type === QuizTypes.MultipleChoices\\\"\\r\\n      [question]=\\\"question\\\"\\r\\n      (answered)=\\\"questionAnswered($event)\\\"\\r\\n    ></app-quiz-multiple-question>\\r\\n\\r\\n    <p *ngIf=\\\"error.length > 0\\\" class=\\\"form-error\\\">\\r\\n      {{error}};\\r\\n    </p>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/quiz/quiz-question/quiz-question.component.html\n// module id = ../../../../../src/app/quiz/quiz-question/quiz-question.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".question-container {\\n  padding: 5px;\\n  height: 100%;\\n}\\n.question-question {\\n  text-transform: capitalize;\\n}\\n.question-note {\\n  font-weight: lighter;\\n  font-style: italic;\\n}\\n.question-passed {\\n  background-color: #badbad;\\n}\\n.question-failed {\\n  background-color: lightcoral;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/quiz/quiz-question/quiz-question.component.less\n// module id = ../../../../../src/app/quiz/quiz-question/quiz-question.component.less\n// module chunks = main","import { Component, EventEmitter, Input, Output, OnInit } from \"@angular/core\";\r\nimport { Question } from \"../../shared/models/question\";\r\nimport { QuizType } from \"../../shared/enums/quiz-type.enum\";\r\nimport { TextQuestion } from \"../../shared/models/text-question\";\r\nimport { MultipleQuestion } from \"../../shared/models/multiple-question\";\r\n\r\n@Component({\r\n  selector: 'app-quiz-question',\r\n  templateUrl: './quiz-question.component.html',\r\n  styleUrls: ['./quiz-question.component.less']\r\n})\r\nexport class QuizQuestionComponent implements OnInit {\r\n  @Input()\r\n  public question: Question;\r\n  @Input()\r\n  public isReviewed: boolean;\r\n  @Output()\r\n  public answered: EventEmitter<Question>;\r\n\r\n  public QuizTypes: any;\r\n\r\n  public type: QuizType;\r\n  public error: string;\r\n\r\n  constructor () {\r\n    this.question = null;\r\n    this.answered = new EventEmitter<Question>();\r\n    this.isReviewed = false;\r\n    this.error = \"\";\r\n\r\n    this.QuizTypes = QuizType;\r\n  }\r\n\r\n  ngOnInit () {\r\n    if (this.question instanceof TextQuestion) {\r\n      this.type = QuizType.Text;\r\n    }\r\n    else if (this.question instanceof MultipleQuestion) {\r\n      this.type = QuizType.MultipleChoices;\r\n    }\r\n    else {\r\n      this.error = \"Unknown question\";\r\n    }\r\n  }\r\n\r\n  public questionAnswered (question: Question): void {\r\n    this.answered.emit(question);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/quiz/quiz-question/quiz-question.component.ts","module.exports = \"<p *ngIf=\\\"!items.length\\\">\\r\\n  Loading ...\\r\\n</p>\\r\\n<ul class=\\\"items-list\\\">\\r\\n  <li *ngFor=\\\"let item of items\\\" [title]=\\\"item.description\\\" (click)=\\\"itemClicked(item)\\\" class=\\\"item-item\\\" >\\r\\n    {{item.name}}\\r\\n  </li>\\r\\n</ul>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/quiz/quiz-selection/quiz-selection.component.html\n// module id = ../../../../../src/app/quiz/quiz-selection/quiz-selection.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".items-list {\\n  margin: 0;\\n  list-style: none;\\n  padding: 0;\\n}\\n.items-list .item-item {\\n  display: inline-block;\\n  background: -webkit-gradient(linear, left top, left bottom, from(#badbad), to(#a6d095));\\n  background: linear-gradient(#badbad, #a6d095);\\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.18);\\n  border-radius: 5px;\\n  padding: 10px;\\n  cursor: pointer;\\n  margin-right: 5px;\\n  font-weight: bold;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/quiz/quiz-selection/quiz-selection.component.less\n// module id = ../../../../../src/app/quiz/quiz-selection/quiz-selection.component.less\n// module chunks = main","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: 'app-quiz-selection',\r\n  templateUrl: './quiz-selection.component.html',\r\n  styleUrls: ['./quiz-selection.component.less']\r\n})\r\nexport class QuizSelectionComponent implements OnInit {\r\n\r\n  @Input()\r\n  public items: any[];\r\n  @Output()\r\n  public selected: EventEmitter<any>;\r\n\r\n  constructor() {\r\n    this.items = [];\r\n    this.selected = new EventEmitter<any>();\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  public itemClicked(item: any) {\r\n    this.selected.emit(item);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/quiz/quiz-selection/quiz-selection.component.ts","module.exports = \"<div class=\\\"answers\\\">\\r\\n  <input #questionInput\\r\\n         class=\\\"answer-text-input\\\"\\r\\n         [(ngModel)]=\\\"question.answer\\\"\\r\\n         (change)=\\\"questionAnswered()\\\"\\r\\n         (keyup)=\\\"tryFocusNext($event)\\\"\\r\\n         [placeholder]=\\\"getPlaceholderText()\\\"\\r\\n         [tabindex]=\\\"question.isCorrect ? -1 : 0\\\"\\r\\n         [readonly]=\\\"question.isCorrect\\\"\\r\\n  >\\r\\n  <button *ngIf=\\\"isReviewed && !question.isCorrect && !revealAnswers\\\"\\r\\n          (click)=\\\"revealAnswers = true;\\\"\\r\\n          class=\\\"reveal\\\"\\r\\n          tabindex=\\\"-1\\\"\\r\\n  >Reveal Answer</button>\\r\\n  <sub *ngIf=\\\"revealAnswers && !question.isCorrect\\\" class=\\\"reveal\\\"> {{ question.getCorrectAnswers().join('/') }} </sub>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/quiz/quiz-text-question/quiz-text-question.component.html\n// module id = ../../../../../src/app/quiz/quiz-text-question/quiz-text-question.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".answers {\\n  padding: 5px;\\n}\\ninput {\\n  padding: 5px;\\n  width: 100%;\\n}\\ninput[readonly] {\\n  background-color: #EEE;\\n}\\n.reveal {\\n  margin-top: 5px;\\n}\\nsub.reveal {\\n  font-style: italic;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/quiz/quiz-text-question/quiz-text-question.component.less\n// module id = ../../../../../src/app/quiz/quiz-text-question/quiz-text-question.component.less\n// module chunks = main","import { Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from \"@angular/core\";\r\nimport { TextQuestion } from \"../../shared/models/text-question\";\r\n\r\n@Component({\r\n  selector: 'app-quiz-text-question',\r\n  templateUrl: './quiz-text-question.component.html',\r\n  styleUrls: ['./quiz-text-question.component.less']\r\n})\r\nexport class QuizTextQuestionComponent implements OnInit {\r\n\r\n  @Input()\r\n  public question: TextQuestion;\r\n  @Input()\r\n  public isReviewed: boolean;\r\n  @Output()\r\n  public answered: EventEmitter<TextQuestion>;\r\n\r\n  @ViewChild('questionInput')\r\n  private inputElement: ElementRef;\r\n\r\n  public revealAnswers: boolean;\r\n\r\n  constructor () {\r\n    this.question = null;\r\n    this.isReviewed = false;\r\n    this.answered = new EventEmitter<TextQuestion>();\r\n    this.revealAnswers = false;\r\n\r\n\r\n  }\r\n\r\n  ngOnInit () {\r\n  }\r\n\r\n  public questionAnswered () {\r\n    this.answered.emit(this.question);\r\n  }\r\n\r\n  public getPlaceholderText () {\r\n    if (this.question.isFinnish) {\r\n      return `Käännä \"${this.question.question}\" englanniksi`;\r\n    }\r\n    else {\r\n      return `Käännä \"${this.question.question}\" suomeksi`;\r\n    }\r\n  }\r\n\r\n  public tryFocusNext (event: KeyboardEvent) {\r\n    // 13 == Enter\r\n    if (event.which === 13) {\r\n      const currentInput = this.inputElement.nativeElement as HTMLInputElement;\r\n\r\n      const nodeList: NodeList = document.querySelectorAll(\".answer-text-input\");\r\n      let nextInput: HTMLInputElement = null;\r\n\r\n      let foundInputElement = false;\r\n\r\n      // Iterate over all nodelist items with tabIndex === -1\r\n      // Check if inputElement == currentInput element to set that it has found the input element\r\n      for (let i = 0; i < nodeList.length; i++) {\r\n        const inputElement = nodeList.item(i) as HTMLInputElement;\r\n        // Exclude the this components element\r\n        if (inputElement === currentInput) {\r\n          foundInputElement = true;\r\n          continue;\r\n        }\r\n        // Exclude elements that doesn't have a tabIndex,  for example their question is correct!\r\n        if (inputElement.tabIndex === -1) {\r\n          continue;\r\n        }\r\n\r\n        // If the foundInputElement is true then the next item we find is the nextInput element\r\n        // Also break out of the forloop as we've found what we're looking for!\r\n        if (foundInputElement) {\r\n          nextInput = inputElement;\r\n          break;\r\n        }\r\n\r\n        // If null set nextInput as first found so if there are no elements after the inputElement it'll go circle back to the first elements.\r\n        if (!nextInput) {\r\n          nextInput = inputElement;\r\n        }\r\n      }\r\n      // If no nextInput was found then there is no element to focus!\r\n      if (!nextInput) {\r\n        return;\r\n      }\r\n\r\n      event.preventDefault();\r\n      nextInput.focus();\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/quiz/quiz-text-question/quiz-text-question.component.ts","module.exports = \"<div class=\\\"questions-list\\\">\\r\\n  <div *ngFor=\\\"let question of questions;\\\" [ngClass]=\\\"{ 'question-hidden': !question.visible, 'question-item': true }\\\">\\r\\n    <app-quiz-question [question]=\\\"question\\\" [isReviewed]=\\\"isReviewed\\\" (answered)=\\\"questionAnswered($event)\\\"></app-quiz-question>\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"answeredQuestionsCount === questions.length\\\" class=\\\"review-container\\\">\\r\\n  <ng-container *ngIf=\\\"correctQuestions !== questions.length; then incorrectBlock else correctBlock;\\\"></ng-container>\\r\\n  <ng-template #incorrectBlock>\\r\\n    <p *ngIf=\\\"isReviewed\\\">\\r\\n      Your score: {{correctQuestions}} of {{questions.length}}\\r\\n    </p>\\r\\n    <p *ngIf=\\\"!isReviewed\\\">\\r\\n      Review test to find out your score!\\r\\n    </p>\\r\\n    <button (click)=\\\"reviewQuiz()\\\">Review quiz</button>\\r\\n  </ng-template>\\r\\n  <ng-template #correctBlock>\\r\\n    You did it!\\r\\n    <br>\\r\\n    You nailed the quiz!\\r\\n    <br>\\r\\n    <button (click)=\\\"doNewQuiz()\\\">Do another quiz!</button>\\r\\n  </ng-template>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/quiz/quiz.component.html\n// module id = ../../../../../src/app/quiz/quiz.component.html\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".questions-list {\\n  display: grid;\\n  grid-template-columns: 1fr 1fr 1fr;\\n  grid-gap: 8px;\\n  margin-bottom: 5px;\\n}\\n.question-hidden {\\n  visibility: collapse;\\n}\\n.question-item {\\n  display: inline-block;\\n  -webkit-box-shadow: 0 2px 4px rgba(0, 0, 0, 0.18);\\n          box-shadow: 0 2px 4px rgba(0, 0, 0, 0.18);\\n}\\n.review-container {\\n  margin-top: 10px;\\n}\\n.review-container p {\\n  margin: 0;\\n}\\n@media screen and (max-width: 800px) {\\n  .questions-list {\\n    grid-template-columns: 1fr 1fr;\\n  }\\n}\\n@media screen and (max-width: 500px) {\\n  .questions-list {\\n    grid-template-columns: 1fr;\\n  }\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/quiz/quiz.component.less\n// module id = ../../../../../src/app/quiz/quiz.component.less\n// module chunks = main","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { Quiz } from \"../shared/models/quiz.model\";\r\nimport { QuizService } from \"./quiz.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { QuizType } from \"../shared/enums/quiz-type.enum\";\r\nimport { Phrase } from \"../shared/models/phrase.model\";\r\nimport { Question } from \"../shared/models/question\";\r\nimport { TextQuestion } from \"../shared/models/text-question\";\r\nimport { IMultipleOption, MultipleQuestion } from \"../shared/models/multiple-question\";\r\n\r\ninterface IQuestionKeys {\r\n  question: string;\r\n  answer: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-quiz',\r\n  templateUrl: './quiz.component.html',\r\n  styleUrls: ['./quiz.component.less']\r\n})\r\nexport class QuizComponent implements OnInit {\r\n\r\n  @Input()\r\n  public quiz: Quiz;\r\n  public type: QuizType;\r\n\r\n  public questions: Question[];\r\n  public correctQuestions: number;\r\n  public isReviewed: boolean;\r\n\r\n  public answeredQuestionsCount: number;\r\n  private answeredQuestions: Question[];\r\n\r\n  constructor (private quizService: QuizService, private router: Router) {\r\n    this.quiz = null;\r\n    this.type = QuizType.MultipleChoices;\r\n    this. questions = [];\r\n    this.correctQuestions = 0;\r\n    this.isReviewed = false;\r\n\r\n    this.answeredQuestionsCount = 0;\r\n    this.answeredQuestions = [];\r\n  }\r\n\r\n  ngOnInit () {\r\n    this.quiz = this.quizService.quiz;\r\n    this.type = this.quizService.quizType;\r\n\r\n    if (!this.quiz) {\r\n      this.router.navigate(['']);\r\n      return;\r\n    }\r\n    // Copy value by value\r\n    const phrases = this.quiz.phrases.slice();\r\n\r\n    // Shuffle phrases\r\n    this.shuffleArray(phrases);\r\n\r\n    // Generate questions\r\n    for (let i = 0; i < phrases.length; ++i) {\r\n      const question = this.createQuestion(i, phrases);\r\n\r\n      this.questions.push(question);\r\n    }\r\n\r\n    // First one is visible!\r\n    this.questions[0].visible = true;\r\n  }\r\n\r\n  /**\r\n   * Take user back to quiz starting route\r\n   */\r\n  public doNewQuiz (): void {\r\n    this.quizService.quiz = null;\r\n    this.router.navigate(['']);\r\n  }\r\n\r\n  /**\r\n   * Whenever a question has been answered show the question that comes after.\r\n   * @param {Question} question\r\n   */\r\n  public questionAnswered (question: Question): void {\r\n    const nextIndex = question.index + 1;\r\n    if (nextIndex < this.questions.length && !this.questions[nextIndex].visible) {\r\n      this.questions[nextIndex].visible = true;\r\n    }\r\n\r\n    if (this.answeredQuestions.indexOf(question) === -1) {\r\n      this.answeredQuestions.push(question);\r\n      this.answeredQuestionsCount++;\r\n    }\r\n  }\r\n\r\n  public reviewQuiz (): void {\r\n    this.correctQuestions = 0;\r\n    for (let i = 0; i < this.questions.length; i++) {\r\n      if (this.questions[i].checkAnswer()) {\r\n        this.correctQuestions++;\r\n      }\r\n    }\r\n\r\n    this.isReviewed = true;\r\n  }\r\n\r\n  /**\r\n   * Create a question item.\r\n   * Based on type it will either be Text or Multiple.\r\n   * @param {number} index\r\n   * @param {Phrase[]} phrases\r\n   * @return {Question}\r\n   */\r\n  private createQuestion (index: number, phrases: Phrase[]): Question {\r\n    if (this.type === QuizType.Text) {\r\n      return this.createTextQuestion(index, phrases);\r\n    }\r\n    else if (this.type === QuizType.MultipleChoices) {\r\n      return this.createMultipleQuestion(index, phrases);\r\n    }\r\n\r\n    throw new Error(\"quiz type was of unknown type\");\r\n  }\r\n\r\n  /**\r\n   * Create a TextQuestion item.\r\n   * @param {number} index\r\n   * @param {Phrase[]} phrases\r\n   * @return {TextQuestion}\r\n   */\r\n  private createTextQuestion (index: number, phrases: Phrase[]): TextQuestion {\r\n    const phrase = phrases[index];\r\n\r\n    const questionKeys = this.getQuestionKeys();\r\n    const question = phrase[questionKeys.question];\r\n    const answer = phrase[questionKeys.answer];\r\n\r\n    const answers = answer.split(\"/\").map(text => {\r\n      return text.trim().toLowerCase();\r\n    });\r\n\r\n    return new TextQuestion(index, question, phrase.note, answers, questionKeys.question === \"finnish\");\r\n  }\r\n\r\n  /**\r\n   * Create a MultipleQuestion item.\r\n   * @param {number} index\r\n   * @param {Phrase[]} phrases\r\n   * @return {MultipleQuestion}\r\n   */\r\n  private createMultipleQuestion (index: number, phrases: Phrase[]) {\r\n    if (phrases.length < this.quizService.phrasesPerQuestion) {\r\n      throw new Error(\"Too few phrases for multiple question quiz\");\r\n    }\r\n\r\n    const correctPhrase: Phrase = phrases[index];\r\n\r\n    const questionKeys = this.getQuestionKeys();\r\n    const question = correctPhrase[questionKeys.question];\r\n\r\n    const indices: number[] = [ index ];\r\n\r\n    // get 2 phrases\r\n    while (indices.length < this.quizService.phrasesPerQuestion) {\r\n      const phraseIndex = Math.floor(Math.random() * phrases.length);\r\n\r\n      if (indices.indexOf(phraseIndex) === -1 ) {\r\n        indices.push(phraseIndex);\r\n      }\r\n    }\r\n\r\n    // Shuffle\r\n    this.shuffleArray(indices);\r\n\r\n    let correctAnswer = 0;\r\n    const options: IMultipleOption[] = [];\r\n\r\n    for (let i = 0; i < indices.length; i++) {\r\n      const phrase = phrases[indices[i]];\r\n\r\n      if (phrase === correctPhrase) {\r\n        correctAnswer = i;\r\n      }\r\n\r\n      const option: IMultipleOption = {\r\n        value: phrase[questionKeys.answer],\r\n        note: phrase.note\r\n      };\r\n\r\n      options.push(option);\r\n    }\r\n\r\n    return new MultipleQuestion(index, question, correctPhrase.note, options, correctAnswer);\r\n  }\r\n\r\n  /**\r\n   * Based on the quiz language return the phrase property keys.\r\n   * For example if the quiz should randomize between finnish & english it randomizes the property keys.\r\n   * @return {IQuestionKeys}\r\n   */\r\n  private getQuestionKeys (): IQuestionKeys {\r\n    // + 0.5 is equivalent of * 2\r\n    if (Math.floor(Math.random() + 0.5) === 0) {\r\n      return {\r\n        question: \"finnish\",\r\n        answer: \"english\"\r\n      };\r\n    }\r\n    else {\r\n      return {\r\n        question: \"english\",\r\n        answer: \"finnish\"\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A simple shuffle array where it goes through each index and randomly changes position with any other index\r\n   * @param {any[]} arr\r\n   */\r\n  private shuffleArray (arr: any[]) {\r\n    for (let i = 0; i < arr.length; ++i) {\r\n      // Get a random number between 0 and length\r\n      const randomId: number = Math.floor(Math.random() * arr.length);\r\n      const temp: any = arr[randomId];\r\n\r\n      arr[randomId] = arr[i];\r\n      arr[i] = temp;\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/quiz/quiz.component.ts","import { ModuleWithProviders, NgModule } from \"@angular/core\";\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule} from \"@angular/forms\";\r\nimport { RouterModule } from '@angular/router';\r\nimport { QuizSelectionComponent } from './quiz-selection/quiz-selection.component';\r\nimport { QuizComponent } from './quiz.component';\r\nimport { QuizService } from \"./quiz.service\";\r\nimport { QuizQuestionComponent } from './quiz-question/quiz-question.component';\r\nimport { QuizMultipleQuestionComponent } from './quiz-multiple-question/quiz-multiple-question.component';\r\nimport { QuizTextQuestionComponent } from './quiz-text-question/quiz-text-question.component';\r\n\r\nconst quizRouting: ModuleWithProviders = RouterModule.forChild([\r\n  {\r\n    // Maybe use quiz/:id if you know the quiz id\r\n    path: \"quiz\",\r\n    component: QuizComponent\r\n  }\r\n]);\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    quizRouting\r\n  ],\r\n  declarations: [\r\n    QuizSelectionComponent,\r\n    QuizComponent,\r\n    QuizQuestionComponent,\r\n    QuizMultipleQuestionComponent,\r\n    QuizTextQuestionComponent\r\n  ],\r\n  providers: [\r\n    QuizService\r\n  ],\r\n  exports: [QuizSelectionComponent]\r\n})\r\nexport class QuizModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/quiz/quiz.module.ts","import { Injectable } from '@angular/core';\r\nimport { Quiz } from \"../shared/models/quiz.model\";\r\nimport { QuizType } from \"../shared/enums/quiz-type.enum\";\r\n\r\n@Injectable()\r\nexport class QuizService {\r\n  // Pass quizz for example from home component to quiz component\r\n  public quiz: Quiz;\r\n  public quizType: QuizType;\r\n  public phrasesPerQuestion: number;\r\n\r\n  constructor () {\r\n    this.quiz = null;\r\n    this.quizType = QuizType.MultipleChoices;\r\n    this.phrasesPerQuestion = 3;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/quiz/quiz.service.ts","export enum QuizType {\r\n  Text = 0,\r\n  MultipleChoices = 1\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/shared/enums/quiz-type.enum.ts","module.exports = \"<header>\\r\\n  <nav>\\r\\n    <ul>\\r\\n      <li>\\r\\n        <a routerLink=\\\"\\\">Home</a>\\r\\n      </li>\\r\\n      <!--<li>-->\\r\\n        <!--<a routerLink=\\\"admin\\\">Admin page</a>-->\\r\\n      <!--</li>-->\\r\\n    </ul>\\r\\n  </nav>\\r\\n</header>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/shared/layout/header/header.component.html\n// module id = ../../../../../src/app/shared/layout/header/header.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/shared/layout/header/header.component.less\n// module id = ../../../../../src/app/shared/layout/header/header.component.less\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.less']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/shared/layout/header/header.component.ts","import { Question } from \"./question\";\r\n\r\nexport interface IMultipleOption {\r\n  value: string;\r\n  note: string;\r\n}\r\n\r\nexport class MultipleQuestion implements Question {\r\n  public visible: boolean;\r\n  public index: number;\r\n  public question: string;\r\n  public note: string;\r\n  public isCorrect: boolean;\r\n\r\n  public answer: number;\r\n  public options: IMultipleOption[];\r\n\r\n  private correctAnswer: number;\r\n\r\n  constructor (index: number, question: string, note: string, options: IMultipleOption[], correctAnswer: number) {\r\n    this.visible = false;\r\n    this.index = index;\r\n    this.question = question;\r\n    this.note = note;\r\n    this.isCorrect = false;\r\n    this.options = options;\r\n    this.answer = -1;\r\n\r\n    this.correctAnswer = correctAnswer;\r\n  }\r\n\r\n  public checkAnswer (): boolean {\r\n    this.isCorrect = this.correctAnswer === this.answer;\r\n\r\n    return this.isCorrect;\r\n  }\r\n\r\n  public hasAnswer (): boolean {\r\n    return this.answer >= 0;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/shared/models/multiple-question.ts","import { Question } from \"./question\";\r\n\r\nexport class TextQuestion implements Question {\r\n  public visible: boolean;\r\n  public index: number;\r\n  public question: string;\r\n  public note: string;\r\n  public answer: string;\r\n  public isCorrect: boolean;\r\n  public isFinnish: boolean;\r\n\r\n  private correctAnswers: string[];\r\n\r\n  constructor (index: number, question: string, note: string, correctAnswers: string[], isFinnish: boolean) {\r\n    this.visible = false;\r\n    this.index = index;\r\n    this.question = question;\r\n    this.note = note;\r\n    this.isCorrect = false;\r\n\r\n    this.correctAnswers = correctAnswers;\r\n    this.isFinnish = isFinnish;\r\n  }\r\n\r\n  /**\r\n   * Get the correct answers array\r\n   * @return {string[]}\r\n   */\r\n  public getCorrectAnswers (): string[] {\r\n    return this.correctAnswers;\r\n  }\r\n\r\n  public checkAnswer (): boolean {\r\n    // Make answer lowercase and trim whitespace\r\n    const answer = this.answer.trim().toLowerCase();\r\n    let isCorrect = false;\r\n\r\n    for (let i = 0; i < this.correctAnswers.length; i++) {\r\n      if (answer === this.correctAnswers[i]) {\r\n        isCorrect = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    this.isCorrect = isCorrect;\r\n    return this.isCorrect;\r\n  }\r\n\r\n  public hasAnswer (): boolean {\r\n    return this.answer.length > 0;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/shared/models/text-question.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders, HttpParams } from \"@angular/common/http\";\r\n\r\nimport { environment } from '../../../environments/environment';\r\n\r\n\r\n@Injectable()\r\nexport class ApiService {\r\n\r\n  constructor (private httpClient: HttpClient) { }\r\n\r\n  public get (url: string, parameters: HttpParams = new HttpParams()): Promise<any> {\r\n    const apiUrl: string = environment.api_url + url;\r\n\r\n    const promise = new Promise<any>(res => {\r\n      this.httpClient.get(apiUrl, {\r\n      headers: this.getRequestHeaders(),\r\n      params: parameters\r\n      }).subscribe((result: any) => {\r\n        res(result);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        res({\r\n          error: error.message\r\n        });\r\n      });\r\n    });\r\n\r\n    return promise;\r\n  }\r\n\r\n  public post (url: string, parameters: any = {}): Promise<any> {\r\n    const apiUrl: string = environment.api_url + url;\r\n\r\n    const promise = new Promise<any>(res => {\r\n      this.httpClient.post(apiUrl, JSON.stringify(parameters), {\r\n        headers: this.getRequestHeaders()\r\n      }).subscribe((result: any) => {\r\n        res(result);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        res({\r\n          error: error.message\r\n        });\r\n      });\r\n    });\r\n\r\n    return promise;\r\n  }\r\n\r\n  private getRequestHeaders (): HttpHeaders {\r\n    return new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      \"Accept\": \"application/json\"\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/shared/services/api.service.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { RouterModule } from '@angular/router';\r\nimport { ApiService } from \"./services/api.service\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    RouterModule,\r\n  ],\r\n  providers: [\r\n    ApiService\r\n  ],\r\n  declarations: [],\r\n})\r\nexport class SharedModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/app/shared/shared.module.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  api_url: \"/api/\"\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Hope/Documents/GitHub/glossarytraining/src/main.ts"],"sourceRoot":"webpack:///"}