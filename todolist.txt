* Tests, add some tests to refamiliarise with protractor

* Move interfaces & enums in quizcreatehealper to their own files.

* Add quizzes for multiple categories
* quiz for all categories ( all words )
  - That's going to be fun when there are 500 words :p
    - Add maybe up to X amount of words so it doesn't test EVERYTHING

* Error handling when adding phrases quizzes e.t.c.
  - For example when forgetting to fill in english field

* Add for phrases to store last selected category instead of default to Kategoroimaton

* Ignore commas and exclamation marks when answering for a text quiz

* Make phrases, quiz and category editable on the spot instead of having to click edit
  - Update the entity list component
    - Ideally it'd be nice if you click edit it creates a dropdown effect instead of going to a new route I think.
    - Error handling

* Style entity-list component better, equal width

* Creating a phrase, category and quiz takes you back to `/phrases` e.t.c.
* Verb quizzes

* Add a (+) or (-) as a way to show/hide a category
  - So that you can toggle visibility of a category since they can get pretty long!

* Add so it can have duplicates but for the other language.
  - Päivää
  - Good day

-------------------
Maybe:
* Improve error handling for quiz
  - For example if phrases.length < phrasesPerQuestion

* getter/setter for quizService properties so it's always an integer for quizType e.t.c.

* Refactor "hasphrases" to some other name like "allthathasphrases"

* Could cache the quizzes & categories on selection if a user will change between A -> B -> A ...
  - Which could be solved by using a service to handle all that logic!

* Create a custom component to select category instead of 1 massive dropdown list when creating a phrase.

* Add fixed options to a phrase for so there can be a quiz about grammar with close looking words.

* Update the API functions to use PUT, DELETE as http functions for the update & delete functionality instead of post.
   - On hold for now, would need to properly rewrite routing.
      So that the id is in the url for example for delete `quiz/1` instead of `quiz/remove`


* Add validation such as phrase.finnish.length < 512 on backend
  - And maxlength for the <input>

* Add frontend for selecting a quiz
  - QuizSelection component
    - Selected words?
        You can select phrases from all the total phrases and make a quiz from that.


